name: Cylon Raider Development

on:
  workflow_dispatch:
    inputs:
      feature_description:
        description: 'Describe the feature to build'
        required: true
        type: string
      priority:
        description: 'Feature priority'
        required: false
        default: 'medium'
        type: choice
        options:
          - 'low'
          - 'medium'
          - 'high'
          - 'critical'
      commander_approval:
        description: 'Commander approval (human decision)'
        required: true
        type: choice
        options:
          - 'approved'
          - 'needs-analysis'
        default: 'needs-analysis'

jobs:
  commander-gate:
    runs-on: self-hosted
    outputs:
      approved: ${{ github.event.inputs.commander_approval == 'approved' }}
      branch_name: ${{ steps.branch.outputs.branch_name }}
    steps:
      - name: Commander Decision Gate
        run: |
          echo "🎯 Commander Decision Gate"
          echo "========================="
          echo "Feature: ${{ github.event.inputs.feature_description }}"
          echo "Priority: ${{ github.event.inputs.priority }}"
          echo "Commander Decision: ${{ github.event.inputs.commander_approval }}"
          
          if [ "${{ github.event.inputs.commander_approval }}" = "approved" ]; then
            echo "✅ Commander has approved this feature for development"
          else
            echo "⏸️ Feature needs Commander analysis before development"
            exit 1
          fi

      - name: Generate Branch Name
        id: branch
        run: |
          branch_name=$(echo "feature/${{ github.event.inputs.feature_description }}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/--*/-/g' | cut -c1-50)
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

  pilot-architecture:
    needs: commander-gate
    if: needs.commander-gate.outputs.approved == 'true'
    runs-on: self-hosted
    outputs:
      architecture: ${{ steps.pilot.outputs.architecture }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create feature branch
        run: |
          git checkout -b ${{ needs.commander-gate.outputs.branch_name }}
          git push -u origin ${{ needs.commander-gate.outputs.branch_name }}

      - name: Pilot Architecture Design
        id: pilot
        run: |
          echo "🧭 Pilot designing architecture..."
          
          # Create system prompt
          cat > pilot_prompt.txt << 'PROMPT_END'
          You are the Pilot in a Cylon Raider Configuration development team. Design technical architecture for this feature.
          Respond in JSON format with: strategic_assessment, components, implementation_plan, technologies, testing_strategy.
          PROMPT_END
          
          # Add feature details
          echo "" >> pilot_prompt.txt
          echo "Feature: ${{ github.event.inputs.feature_description }}" >> pilot_prompt.txt
          echo "Priority: ${{ github.event.inputs.priority }}" >> pilot_prompt.txt
          
          # Call AI
          response=$(ollama run qwen2.5:7b "$(cat pilot_prompt.txt)")
          echo "architecture=$response" >> $GITHUB_OUTPUT
          
          # Create documentation
          mkdir -p docs/architecture
          echo "# Architecture: ${{ github.event.inputs.feature_description }}" > docs/architecture/pilot-design.md
          echo "$response" >> docs/architecture/pilot-design.md
          
          git add docs/
          git commit -m "docs: Add Pilot architecture"

  gunner-implementation:
    needs: [commander-gate, pilot-architecture]
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Switch to feature branch
        run: |
          git checkout ${{ needs.commander-gate.outputs.branch_name }}
          git pull origin ${{ needs.commander-gate.outputs.branch_name }}

      - name: Create experiment branch
        run: |
          experiment_branch="experiment/$(echo '${{ github.event.inputs.feature_description }}' | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]' | cut -c1-40)"
          git checkout -b "$experiment_branch"
          echo "EXPERIMENT_BRANCH=$experiment_branch" >> $GITHUB_ENV

      - name: Gunner Implementation
        run: |
          echo "⚔️ Gunner implementing feature..."
          
          # Create system prompt
          cat > gunner_prompt.txt << 'PROMPT_END'
          You are the Gunner in a Cylon Raider Configuration development team. Implement the feature with clean code and tests.
          Respond in JSON format with: implementation_summary, files array, tests array, documentation.
          PROMPT_END
          
          # Add context
          echo "" >> gunner_prompt.txt
          echo "Feature: ${{ github.event.inputs.feature_description }}" >> gunner_prompt.txt
          echo "Architecture: ${{ needs.pilot-architecture.outputs.architecture }}" >> gunner_prompt.txt
          
          # Call AI
          response=$(ollama run codellama:7b "$(cat gunner_prompt.txt)")
          
          # Create a simple implementation file
          mkdir -p src
          echo "# Implementation for: ${{ github.event.inputs.feature_description }}" > src/feature.py
          echo "# Generated by Cylon Gunner" >> src/feature.py
          echo "$response" >> src/feature.py
          
          # Commit changes
          git add .
          git commit -m "feat: Implement ${{ github.event.inputs.feature_description }}"
          git push origin "$EXPERIMENT_BRANCH"

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Create simple PR
          gh pr create --base ${{ needs.commander-gate.outputs.branch_name }} --head $EXPERIMENT_BRANCH --title "Experiment: ${{ github.event.inputs.feature_description }}" --body "Implementation ready for review"

  commander-summary:
    needs: [commander-gate, pilot-architecture, gunner-implementation]
    if: always() && needs.commander-gate.outputs.approved == 'true'
    runs-on: self-hosted
    steps:
      - name: Summary
        run: |
          echo "🎯 Cylon mission complete for: ${{ github.event.inputs.feature_description }}"
          echo "Review the pull request and approve when ready."
