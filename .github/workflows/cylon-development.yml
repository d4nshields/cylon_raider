name: Cylon Raider Development

# Add permissions for GitHub Actions
permissions:
  contents: write
  pull-requests: write
  actions: read

on:
  workflow_dispatch:
    inputs:
      feature_description:
        description: 'Describe the feature to build'
        required: true
        type: string
      priority:
        description: 'Feature priority'
        required: false
        default: 'medium'
        type: choice
        options:
          - 'low'
          - 'medium'
          - 'high'
          - 'critical'
      commander_approval:
        description: 'Commander approval (human decision)'
        required: true
        type: choice
        options:
          - 'approved'
          - 'needs-analysis'
        default: 'needs-analysis'

jobs:
  commander-gate:
    runs-on: self-hosted
    outputs:
      approved: ${{ github.event.inputs.commander_approval == 'approved' }}
      branch_name: ${{ steps.branch.outputs.branch_name }}
    steps:
      - name: Commander Decision Gate
        run: |
          echo "üéØ Commander Decision Gate"
          echo "========================="
          echo "Feature: ${{ github.event.inputs.feature_description }}"
          echo "Priority: ${{ github.event.inputs.priority }}"
          echo "Commander Decision: ${{ github.event.inputs.commander_approval }}"
          
          if [ "${{ github.event.inputs.commander_approval }}" = "approved" ]; then
            echo "‚úÖ Commander has approved this feature for development"
          else
            echo "‚è∏Ô∏è Feature needs Commander analysis before development"
            exit 1
          fi

      - name: Generate Branch Name
        id: branch
        run: |
          branch_name=$(echo "feature/${{ github.event.inputs.feature_description }}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/--*/-/g' | cut -c1-50)
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

  pilot-architecture:
    needs: commander-gate
    if: needs.commander-gate.outputs.approved == 'true'
    runs-on: self-hosted
    outputs:
      architecture: ${{ steps.pilot.outputs.architecture }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ github.token }}

      - name: Configure Git
        run: |
          git config --global user.name "Cylon Raider Bot"
          git config --global user.email "action@github.com"

      - name: Create feature branch
        run: |
          git checkout -b ${{ needs.commander-gate.outputs.branch_name }}
          git push -u origin ${{ needs.commander-gate.outputs.branch_name }}

      - name: Pilot Architecture Design
        id: pilot
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          echo "üß≠ Pilot designing architecture with Smart Claude..."
          
          # Use Smart Claude (API in GitHub Actions, CLI locally)
          ./scripts/smart-claude.sh "
          You are the Pilot in a Cylon Raider Configuration development team.
          
          Feature to architect: ${{ github.event.inputs.feature_description }}
          Priority: ${{ github.event.inputs.priority }}
          
          Please create comprehensive technical documentation for this feature:
          
          1. **Architecture Overview** - Create docs/architecture/pilot-design.md with:
             - Strategic assessment
             - System components and their interactions  
             - Implementation approach
             - Technology recommendations
             - Testing strategy
             
          2. **Technical Specifications** - Include:
             - Data models and schemas
             - API endpoints (if applicable)
             - Security considerations
             - Performance requirements
             
          Please create the files with proper markdown formatting and detailed technical content.
          The Gunner will use this documentation to implement the feature.
          "
          
          # Capture architecture summary for next step
          if [ -f "docs/architecture/pilot-design.md" ]; then
            architecture_summary=$(head -20 docs/architecture/pilot-design.md)
            echo "architecture=$architecture_summary" >> $GITHUB_OUTPUT
          fi
          
          git add docs/
          git commit -m "docs: Add Pilot architecture design" || echo "No changes to commit"

  gunner-implementation:
    needs: [commander-gate, pilot-architecture]
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ github.token }}

      - name: Configure Git
        run: |
          git config --global user.name "Cylon Raider Bot"
          git config --global user.email "action@github.com"

      - name: Switch to feature branch
        run: |
          git checkout ${{ needs.commander-gate.outputs.branch_name }}
          git pull origin ${{ needs.commander-gate.outputs.branch_name }}

      - name: Create experiment branch
        run: |
          experiment_branch="experiment/$(echo '${{ github.event.inputs.feature_description }}' | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]' | cut -c1-40)"
          git checkout -b "$experiment_branch"
          echo "EXPERIMENT_BRANCH=$experiment_branch" >> $GITHUB_ENV

      - name: Gunner Implementation
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          echo "‚öîÔ∏è Gunner implementing feature with Smart Claude..."
          
          # Use Smart Claude for intelligent implementation
          ./scripts/smart-claude.sh "
          You are the Gunner in a Cylon Raider Configuration development team.
          
          Feature to implement: ${{ github.event.inputs.feature_description }}
          Priority: ${{ github.event.inputs.priority }}
          
          Architecture context: Please read docs/architecture/pilot-design.md for the technical specifications.
          
          Please implement this feature with:
          
          1. **Core Implementation** - Create the main source files:
             - Clean, professional code following best practices
             - Proper error handling and input validation
             - Clear documentation and comments
             - Modular, maintainable structure
             
          2. **Comprehensive Tests** - Create test files:
             - Unit tests for all functions/methods
             - Integration tests for workflows
             - Edge case and error condition testing
             - Test data and fixtures as needed
             
          3. **Documentation** - Update or create:
             - README.md with usage instructions
             - API documentation (if applicable)
             - Installation/setup instructions
             
          Please create all files with proper structure and detailed implementation.
          Follow the architecture designed by the Pilot team member.
          "
          
          # Commit changes
          git add .
          git commit -m "feat: Implement ${{ github.event.inputs.feature_description }}" || echo "No changes to commit"
          git push origin "$EXPERIMENT_BRANCH"

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Create simple PR
          gh pr create --base ${{ needs.commander-gate.outputs.branch_name }} --head $EXPERIMENT_BRANCH --title "Experiment: ${{ github.event.inputs.feature_description }}" --body "Implementation ready for review"

  commander-summary:
    needs: [commander-gate, pilot-architecture, gunner-implementation]
    if: always() && needs.commander-gate.outputs.approved == 'true'
    runs-on: self-hosted
    steps:
      - name: Summary
        run: |
          echo "üéØ Cylon mission complete for: ${{ github.event.inputs.feature_description }}"
          echo "Review the pull request and approve when ready."
